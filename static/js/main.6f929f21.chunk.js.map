{"version":3,"sources":["Display.js","Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Display","number","operator","id","Buttons","pressedButton","document","documentElement","onkeydown","e","btn","key","getElementById","undefined","classList","add","click","setTimeout","remove","onClick","App","state","numberOnScreen","newNumber","decimal","previousNumber","showOperator","button","clear","calculate","addDigit","setState","digit","length","formatForScreen","operation","parse","result","stringResult","toString","Infinity","isNaN","indexOf","trimExponential","replace","toExponential","slice","nonExpPart","expPart","parseFloat","numberString","currentNumber","sign","intPart","decPart","formattedNumber","className","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f929f21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Display = ({ number, operator }) => {\r\n  return (\r\n    <div id='display'>\r\n      <div id='number'>{number}</div>\r\n      <div id='operator'>{operator}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\n\r\nconst Buttons = ({ pressedButton }) => {\r\n  document.documentElement.onkeydown = btnPressed;\r\n  function btnPressed(e) {\r\n    let btn;\r\n    switch (e.key) {\r\n      case 'Delete':\r\n      case 'c':\r\n      case 'C':\r\n        btn = document.getElementById('clear');\r\n        break;\r\n      case '/':\r\n        btn = document.getElementById('divide');\r\n        break;\r\n      case '*':\r\n        btn = document.getElementById('multiply');\r\n        break;\r\n      case '-':\r\n        btn = document.getElementById('subtract');\r\n        break;\r\n      case '7':\r\n        btn = document.getElementById('seven');\r\n        break;\r\n      case '8':\r\n        btn = document.getElementById('eight');\r\n        break;\r\n      case '9':\r\n        btn = document.getElementById('nine');\r\n        break;\r\n      case '+':\r\n        btn = document.getElementById('add');\r\n        break;\r\n      case '4':\r\n        btn = document.getElementById('four');\r\n        break;\r\n      case '5':\r\n        btn = document.getElementById('five');\r\n        break;\r\n      case '6':\r\n        btn = document.getElementById('six');\r\n        break;\r\n      case '1':\r\n        btn = document.getElementById('one');\r\n        break;\r\n      case '2':\r\n        btn = document.getElementById('two');\r\n        break;\r\n      case '3':\r\n        btn = document.getElementById('three');\r\n        break;\r\n      case 'Enter':\r\n      case '=':\r\n        btn = document.getElementById('equals');\r\n        break;\r\n      case '0':\r\n        btn = document.getElementById('zero');\r\n        break;\r\n      case ',':\r\n      case '.':\r\n        btn = document.getElementById('decimal');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (btn !== undefined) {\r\n      btn.classList.add('button-pressed');\r\n      btn.click();\r\n      setTimeout(() => {\r\n        btn.classList.remove('button-pressed');\r\n      }, 100);\r\n    }\r\n  }\r\n  return (\r\n    <div id='buttons'>\r\n      <button\r\n        id='clear'\r\n        onClick={() => {\r\n          pressedButton('clear');\r\n        }}\r\n      >\r\n        C\r\n      </button>\r\n      <button\r\n        id='divide'\r\n        onClick={() => {\r\n          pressedButton('divide');\r\n        }}\r\n      >\r\n        /\r\n      </button>\r\n      <button\r\n        id='multiply'\r\n        onClick={() => {\r\n          pressedButton('multiply');\r\n        }}\r\n      >\r\n        ×\r\n      </button>\r\n      <button\r\n        id='subtract'\r\n        onClick={() => {\r\n          pressedButton('subtract');\r\n        }}\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        id='seven'\r\n        onClick={() => {\r\n          pressedButton('seven');\r\n        }}\r\n      >\r\n        7\r\n      </button>\r\n      <button\r\n        id='eight'\r\n        onClick={() => {\r\n          pressedButton('eight');\r\n        }}\r\n      >\r\n        8\r\n      </button>\r\n      <button\r\n        id='nine'\r\n        onClick={() => {\r\n          pressedButton('nine');\r\n        }}\r\n      >\r\n        9\r\n      </button>\r\n      <button\r\n        id='add'\r\n        onClick={() => {\r\n          pressedButton('add');\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      <button\r\n        id='four'\r\n        onClick={() => {\r\n          pressedButton('four');\r\n        }}\r\n      >\r\n        4\r\n      </button>\r\n      <button\r\n        id='five'\r\n        onClick={() => {\r\n          pressedButton('five');\r\n        }}\r\n      >\r\n        5\r\n      </button>\r\n      <button\r\n        id='six'\r\n        onClick={() => {\r\n          pressedButton('six');\r\n        }}\r\n      >\r\n        6\r\n      </button>\r\n      <button\r\n        id='one'\r\n        onClick={() => {\r\n          pressedButton('one');\r\n        }}\r\n      >\r\n        1\r\n      </button>\r\n      <button\r\n        id='two'\r\n        onClick={() => {\r\n          pressedButton('two');\r\n        }}\r\n      >\r\n        2\r\n      </button>\r\n      <button\r\n        id='three'\r\n        onClick={() => {\r\n          pressedButton('three');\r\n        }}\r\n      >\r\n        3\r\n      </button>\r\n      <button\r\n        id='equals'\r\n        onClick={() => {\r\n          pressedButton('equals');\r\n        }}\r\n      >\r\n        =\r\n      </button>\r\n      <button\r\n        id='zero'\r\n        onClick={() => {\r\n          pressedButton('zero');\r\n        }}\r\n      >\r\n        0\r\n      </button>\r\n      <button\r\n        id='decimal'\r\n        onClick={() => {\r\n          pressedButton('decimal');\r\n        }}\r\n      >\r\n        ,\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\r\nimport Display from './Display';\r\nimport Buttons from './Buttons';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    numberOnScreen: '0',\r\n    newNumber: true,\r\n    decimal: false,\r\n    previousNumber: 0,\r\n    operator: '',\r\n    showOperator: ''\r\n  };\r\n  pressedButton = button => {\r\n    switch (button) {\r\n      case 'clear':\r\n        this.clear();\r\n        break;\r\n      case 'divide':\r\n        this.calculate('/');\r\n        break;\r\n      case 'multiply':\r\n        this.calculate('×');\r\n        break;\r\n      case 'subtract':\r\n        this.calculate('-');\r\n        break;\r\n      case 'seven':\r\n        this.addDigit('7');\r\n        break;\r\n      case 'eight':\r\n        this.addDigit('8');\r\n        break;\r\n      case 'nine':\r\n        this.addDigit('9');\r\n        break;\r\n      case 'add':\r\n        this.calculate('+');\r\n        break;\r\n      case 'four':\r\n        this.addDigit('4');\r\n        break;\r\n      case 'five':\r\n        this.addDigit('5');\r\n        break;\r\n      case 'six':\r\n        this.addDigit('6');\r\n        break;\r\n      case 'one':\r\n        this.addDigit('1');\r\n        break;\r\n      case 'two':\r\n        this.addDigit('2');\r\n        break;\r\n      case 'three':\r\n        this.addDigit('3');\r\n        break;\r\n      case 'equals':\r\n        this.calculate('');\r\n        break;\r\n      case 'zero':\r\n        this.addDigit('0');\r\n        break;\r\n      case 'decimal':\r\n        this.decimal();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  clear = () => {\r\n    const { newNumber } = this.state;\r\n    if (newNumber) {\r\n      this.setState({\r\n        numberOnScreen: '0',\r\n        newNumber: true,\r\n        decimal: false,\r\n        previousNumber: 0,\r\n        operator: '',\r\n        showOperator: ''\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOnScreen: '0',\r\n        newNumber: true,\r\n        decimal: false\r\n      });\r\n    }\r\n  };\r\n\r\n  addDigit = digit => {\r\n    const { numberOnScreen, newNumber } = this.state;\r\n    if (newNumber) {\r\n      this.setState({\r\n        numberOnScreen: digit,\r\n        newNumber: digit === '0' ? true : false,\r\n        showOperator: ''\r\n      });\r\n    } else {\r\n      if (numberOnScreen.length < 14) {\r\n        this.setState({\r\n          numberOnScreen: this.formatForScreen(numberOnScreen + digit)\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  decimal = () => {\r\n    const { numberOnScreen, newNumber, decimal } = this.state;\r\n    if (!decimal) {\r\n      this.setState({\r\n        numberOnScreen: newNumber ? '0,' : numberOnScreen + ',',\r\n        newNumber: false,\r\n        decimal: true,\r\n        showOperator: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  calculate = operation => {\r\n    const {\r\n      numberOnScreen,\r\n      previousNumber,\r\n      operator,\r\n      showOperator\r\n    } = this.state;\r\n    // Ako sam se predomislio i stisnuo neku drugu operaciju\r\n    if (showOperator !== '') {\r\n      this.setState({\r\n        operator: operation,\r\n        showOperator: operation\r\n      });\r\n      return;\r\n    }\r\n    if (numberOnScreen === 'Infinity' || numberOnScreen === 'NaN') {\r\n      return;\r\n    }\r\n    // Ako operator već postoji samim time postoji i prethodni broj, onda treba izračunati\r\n    // i postaviti nove vrijednosti, inače samo postaviti nove vrijednosti\r\n    let number = this.parse(numberOnScreen);\r\n    if (operator !== '') {\r\n      let result;\r\n      switch (operator) {\r\n        case '+':\r\n          result = previousNumber + number;\r\n          break;\r\n        case '-':\r\n          result = previousNumber - number;\r\n          break;\r\n        case '×':\r\n          result = previousNumber * number;\r\n          break;\r\n        case '/':\r\n          result = previousNumber / number;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      // Rezultat može biti negativan, ogroman, puno decimala, Infinity, NaN...\r\n      // provjeriti, formatirati, prikazati\r\n      let stringResult = result.toString();\r\n      if (result === Infinity || isNaN(result)) {\r\n        result = 0;\r\n        // Ako je rezultat u exponential obliku i veći od 14 znakova\r\n      } else if (stringResult.indexOf('e') >= 0 && stringResult.length > 14) {\r\n        stringResult = this.trimExponential(result);\r\n        stringResult = stringResult.replace('.', ',');\r\n      } else if (stringResult.length > 14 && stringResult.indexOf('e') < 0) {\r\n        // Ako rezultat NIJE u eksponencijalnom obliku ali je veći od 14 znakova\r\n        // Provjeriti dali je to cijeli broj ili je decimalni sa velikim cijelim dijelom\r\n        if (stringResult.indexOf('.') < 0 || stringResult.indexOf('.') > 13) {\r\n          result = result.toExponential();\r\n          stringResult = this.trimExponential(result);\r\n          stringResult = stringResult.replace('.', ',');\r\n          // Decimalni je broj sa previše decimala\r\n        } else {\r\n          stringResult = stringResult.slice(0, 14);\r\n        }\r\n      } else if (false) {\r\n        // Ovdje dodati druge situacije ako postoji koja\r\n      } else {\r\n        stringResult = this.formatForScreen(stringResult.replace('.', ','));\r\n      }\r\n      this.setState({\r\n        numberOnScreen: stringResult,\r\n        newNumber: true,\r\n        decimal: false,\r\n        previousNumber: result,\r\n        operator: operation,\r\n        showOperator: operation\r\n      });\r\n    } else {\r\n      this.setState({\r\n        numberOnScreen: this.formatForScreen(\r\n          number.toString().replace('.', ',')\r\n        ),\r\n        newNumber: true,\r\n        decimal: false,\r\n        previousNumber: number,\r\n        operator: operation,\r\n        showOperator: operation\r\n      });\r\n    }\r\n  };\r\n\r\n  trimExponential = result => {\r\n    let stringResult = result.toString();\r\n    if (stringResult.length > 14) {\r\n      let nonExpPart = stringResult.slice(0, stringResult.indexOf('e'));\r\n      let expPart = stringResult.slice(\r\n        stringResult.indexOf('e'),\r\n        stringResult.length\r\n      );\r\n      nonExpPart = nonExpPart.slice(0, 14 - expPart.length - 2);\r\n      nonExpPart = parseFloat(nonExpPart);\r\n      stringResult = nonExpPart.toString() + expPart;\r\n    }\r\n    return stringResult;\r\n  };\r\n\r\n  parse = numberString => {\r\n    numberString = numberString.replace(/\\./g, '').replace(',', '.');\r\n    return parseFloat(numberString);\r\n  };\r\n\r\n  formatForScreen = currentNumber => {\r\n    let sign, intPart, decPart;\r\n    sign = currentNumber.slice(0, 1) === '-' ? '-' : '';\r\n    if (currentNumber.indexOf(',') >= 0) {\r\n      intPart = currentNumber.slice(sign.length, currentNumber.indexOf(','));\r\n      decPart = currentNumber.slice(\r\n        currentNumber.indexOf(','),\r\n        currentNumber.length\r\n      );\r\n    } else {\r\n      intPart = currentNumber.slice(sign.length, currentNumber.length);\r\n      decPart = '';\r\n    }\r\n    intPart = intPart.replace(/\\./g, '');\r\n    let formattedNumber = '';\r\n    while (intPart.length > 3) {\r\n      formattedNumber =\r\n        '.' + intPart.slice(intPart.length - 3) + formattedNumber;\r\n      intPart = intPart.slice(0, intPart.length - 3);\r\n    }\r\n    formattedNumber = sign + intPart + formattedNumber + decPart;\r\n    return formattedNumber;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Display\r\n          number={this.state.numberOnScreen}\r\n          operator={this.state.showOperator}\r\n        />\r\n        <Buttons pressedButton={this.pressedButton} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}